---
import ProjectsSvg from "./ProjectsSvg.astro";
import ProjectCard from "../components/ProjectCard.astro";

const projects = [
  {
    title: "Game Store",
    desc: "A mock game store with a shopping cart. Users can search for any game. Gets game data from the RAWG game database API.",
    liveLink: "https://clarasmyth.github.io/shopping-cart",
    repoLink: "https://github.com/ClaraSmyth/shopping-cart",
    imgPath: "/src/assets/project-1.webp",
    icons: {
      icon1: "TypeScript",
      icon2: "Tailwind",
      icon3: "React",
    },
  },
  {
    title: "CV Builder",
    desc: "A CV builder application. Users can create a customised CV with optional picture upload and ability to download the finished CV.",
    liveLink: "https://clarasmyth.github.io/cv-application/",
    repoLink: "https://github.com/ClaraSmyth/cv-application",
    imgPath: "/src/assets/project-2.webp",
    icons: {
      icon1: "React",
      icon2: "Sass",
      icon3: null,
    },
  },
  {
    title: "Battleship",
    desc: "A classic battleship game. Players can drag and drop their ships or randomise them and play against a relatively smart AI.",
    liveLink: "https://clarasmyth.github.io/battleship/",
    repoLink: "https://github.com/ClaraSmyth/battleship",
    imgPath: "/src/assets/project-3.webp",
    icons: {
      icon1: "Html",
      icon2: "Sass",
      icon3: "JavaScript",
    },
  },
];
---

<section
  class="relative mt-[220px] grid h-max min-h-min w-full grid-cols-1 grid-rows-3 justify-center justify-items-center overflow-x-clip"
>
  <ProjectsSvg />

  {
    projects.map((project, index) => (
      <div
        id={`card${index}`}
        style={{ gridRowStart: index + 1 }}
        class="sticky top-0 z-10 col-start-1 col-end-1 grid h-screen w-full max-w-screen-lg items-center px-6"
      >
        <ProjectCard index={index} project={project} />
      </div>
    ))
  }
</section>

<script>
  import { scroll, animate, inView, timeline } from "motion";

  ["card0", "card1", "card2"].forEach((card) => {
    scroll(
      animate(`#${card}`, {
        scale: [1.2, 1],
        visibility: ["visible", "visible"],
      }),
      {
        target: document.getElementById(card)!,
        offset: ["start end", "center center"],
      },
    );
  });

  ["card1", "card2"].forEach((card) => {
    scroll(
      animate(`#${card === "card1" ? "card0" : "card1"}`, {
        scale: [1, 0.8],
        visibility: ["visible", "visible"],
      }),
      {
        target: document.getElementById(card)!,
        offset: ["start center", "center center"],
      },
    );
  });

  const draw = (progress: number) => ({
    // This property makes the line "draw" in when animated
    strokeDashoffset: 1 - progress,

    // Each line will be hidden until it starts drawing
    // to fix a bug in Safari where the line can be
    // partially visible even when progress is at 0
    visibility: "visible",
  });

  ["#projectCardSvg0", "#projectCardSvg1", "#projectCardSvg2"].forEach(
    (card) => {
      inView(
        card,
        () => {
          [".Icon1", ".Icon2", ".Icon3"].forEach((icon, index) => {
            timeline(
              [
                [
                  `${card} ${icon} .Line1`,
                  draw(1),
                  { duration: 0.8, delay: index / 2 },
                ],
                [
                  `${card} ${icon} .Line2`,
                  draw(1),
                  { duration: 0.8, at: "-0.7" },
                ],
                [
                  `${card} ${icon} .Part1`,
                  draw(1),
                  { duration: 0.8, at: "-0.3" },
                ],
                [`${card} ${icon} .Part2`, draw(1), { duration: 0.8, at: "0" }],
              ],
              {
                defaultOptions: {
                  easing: "linear",
                },
              },
            );
          });
        },
        { margin: "0px 0px -50% 0px", amount: 0.45 },
      );
    },
  );
</script>
